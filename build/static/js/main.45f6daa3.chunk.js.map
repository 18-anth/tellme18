{"version":3,"sources":["components/UI/Header/Header.js","components/HomePage/HomePage.js","utils/apiRequests.js","utils/apiEndpoints.js","utils/helpers.js","components/UI/Messenger/Messenger.js","reducers/MessageListReducer.js","components/UI/Alert/Alert.js","components/UI/MeetingInfo/MeetingInfo.js","components/UI/CallPageFooter/CallPageFooter.js","components/UI/CallPageHeader/CallPageHeader.js","components/CallPage/Video.js","components/CallPage/CallPage.js","components/NoMatch/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","icon","faQuestionCircle","faExclamationCircle","faCog","HomePage","history","useHistory","onClick","uid","shortid","generate","push","faVideo","faKeyboard","placeholder","href","postRequest","url","a","payload","axios","post","then","resp","data","getRequest","get","BASE_URL","formatDate","timestamp","moment","format","Messenger","setIsMessenger","sendMsg","messageList","useState","msg","setMsg","handleChangeMsg","e","target","value","faTimes","faUserFriends","faCommentAlt","map","item","user","time","onChange","onKeyDown","key","handleKeyDown","faPaperPlane","MessageListReducer","state","action","draftState","type","Alert","messageAlert","MeetingInfo","setMeetInfoPopup","faUser","faCopy","navigator","clipboard","writeText","faShieldAlt","CallPageFooter","isPresenting","stopScreenShare","screenShare","isAudio","isVideo","toggleAudio","toggleVideo","disconnectCall","playStop","faAngleUp","faMicrophone","faMicrophoneSlash","faPhone","onclick","faVideoSlash","faClosedCaptioning","faDesktop","CallPageHeader","isMessenger","setMessageAlert","interval","currentTime","setCurrentTime","useEffect","setInterval","clearInterval","alert","faUserCircle","CallPage","props","componentDidMount","pc","RTCPeerConnection","onicecandidate","candidate","console","log","JSON","stringify","localVideoref","React","createRef","remoteVideoref","mediaDevices","getUserMedia","video","stream","current","srcObject","catch","style","width","height","margin","ref","this","autoPlay","Component","peer","socket","io","connect","initialState","id","useParams","isAdmin","window","location","hash","origin","pathname","alertTimeout","useReducer","messageListReducer","streamObj","setStreamObj","screenCastStream","setScreenCastStream","meetInfoPopup","setIsPresenting","setIsAudio","setIsVideo","initWebRTC","on","signal","getRecieverCode","response","code","audio","Peer","initiator","trickle","signalData","emit","cbData","clearTimeout","toString","Date","now","isPopup","setTimeout","document","querySelector","URL","createObjectURL","play","controls","Video","getVideoTracks","forEach","track","stop","replaceTrack","getDisplayMedia","cursor","screenStream","getTracks","onended","enabled","getAudioTracks","destroy","reload","send","NoMatch","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45f6daa3.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faQuestionCircle,\r\n  faExclamationCircle,\r\n  faCog,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n        <img src=\"https://www.gstatic.com/meet/google_meet_horizontal_wordmark_2020q4_2x_icon_124_40_292e71bcb52a56e2a9005164118f183b.png\" />\r\n        <span className=\"help-text\">Meet</span>\r\n      </div>\r\n      <div className=\"action-btn\">\r\n        <FontAwesomeIcon className=\"icon-block\" icon={faQuestionCircle} />\r\n        <FontAwesomeIcon className=\"icon-block\" icon={faExclamationCircle} />\r\n        <FontAwesomeIcon className=\"icon-block\" icon={faCog} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;","import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVideo, faKeyboard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport shortid from \"shortid\";\r\nimport \"./HomePage.scss\";\r\nimport Header from \"../UI/Header/Header\";\r\n\r\nconst HomePage = () => {\r\n    const history = useHistory();\r\n\r\n    const startCall = () => {\r\n      const uid = shortid.generate();\r\n      history.push(`/${uid}#init`);\r\n    };  \r\n    return (\r\n        <div className=\"home-page\">\r\n          <Header />\r\n          <div className=\"body\">\r\n            <div className=\"left-side\">\r\n              <div className=\"content\">\r\n                <h2>Premium video meetings. Now free for everyone.</h2>\r\n                <p>\r\n                  We re-engineered the service we built for secure business\r\n                  meetings, Google Meet, to make it free and available for all.\r\n                </p>\r\n                <div className=\"action-btn\">\r\n                  <button className=\"btn green\" onClick={startCall}>\r\n                    <FontAwesomeIcon className=\"icon-block\" icon={faVideo} />\r\n                    New Meeting\r\n                  </button>\r\n                  <div className=\"input-block\">\r\n                    <div className=\"input-section\">\r\n                      <FontAwesomeIcon className=\"icon-block\" icon={faKeyboard} />\r\n                      <input placeholder=\"Enter a code or link\" />\r\n                    </div>\r\n                    <button className=\"btn no-bg\">Join</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"help-text\">\r\n                <a href=\"\">Learn more</a> about Google Meet\r\n              </div>\r\n            </div>\r\n            <div className=\"right-side\">\r\n              <div className=\"content\">\r\n                <img src=\"https://www.gstatic.com/meet/google_meet_marketing_ongoing_meeting_grid_427cbb32d746b1d0133b898b50115e96.jpg\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n    export default HomePage;","import axios from 'axios';\r\n\r\nexport const postRequest = async (url, payload = {}) => {\r\n    const data = await axios.post(url, payload)\r\n        .then(resp => resp.data)\r\n        \r\n    return data;\r\n}\r\n\r\nexport const putRequest = async (url, payload = {}) => {\r\n    const data = await axios.put(url, payload)\r\n        .then(resp => resp.data)\r\n\r\n    return data;\r\n}\r\n\r\nexport const getRequest = async (url) => {\r\n    const data = await axios.get(url)\r\n        .then(resp => resp.data)\r\n\r\n    return data;\r\n}\r\n\r\nexport const deleteRequest = async (url) => {\r\n    const data = await axios.delete(url)\r\n        .then(resp => resp.data)\r\n        .catch(err => (\r\n            { error: err.response.data }\r\n        ));\r\n    return data;\r\n}","export const BASE_URL = \"http://localhost:4000\";\r\nexport const SAVE_CALL_ID = \"/api/save-call-id\";\r\nexport const GET_CALL_ID = \"/api/get-call-id\";\r\n","import moment from 'moment';\r\n\r\nexport const formatDate = (timestamp) => {\r\n    return moment(timestamp).format(\"h:mm A\");\r\n}","import { useState } from \"react\";\r\nimport \"./Messenger.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faUserFriends,\r\n  faCommentAlt,\r\n  faPaperPlane,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { formatDate } from \"./../../../utils/helpers\";\r\n\r\nconst Messenger = ({ setIsMessenger, sendMsg, messageList }) => {\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleChangeMsg = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      sendMsg(msg);\r\n      setMsg(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSendMsg = () => {\r\n    sendMsg(msg);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"messenger-container\">\r\n      <div className=\"messenger-header\">\r\n        <h3>Meeting details</h3>\r\n        <FontAwesomeIcon\r\n          className=\"icon\"\r\n          icon={faTimes}\r\n          onClick={() => {\r\n            setIsMessenger(false);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"messenger-header-tabs\">\r\n        <div className=\"tab\">\r\n          <FontAwesomeIcon className=\"icon\" icon={faUserFriends} />\r\n          <p>People (1)</p>\r\n        </div>\r\n        <div className=\"tab active\">\r\n          <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\r\n          <p>Chat</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-section\">\r\n        {messageList.map((item) => (\r\n          <div key={item.time} className=\"chat-block\">\r\n            <div className=\"sender\">\r\n              {item.user} <small>{formatDate(item.time)}</small>\r\n            </div>\r\n            <p className=\"msg\">{item.msg}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"send-msg-section\">\r\n        <input\r\n          placeholder=\"Send a message to everyone\"\r\n          value={msg}\r\n          onChange={(e) => handleChangeMsg(e)}\r\n          onKeyDown={(e) => handleKeyDown(e)}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"icon\"\r\n          icon={faPaperPlane}\r\n          onClick={handleChangeMsg}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messenger;","const MessageListReducer = (state, action) => {\r\n    let draftState = [...state];\r\n    switch (action.type) {\r\n      case \"addMessage\":\r\n        return [...draftState, action.payload];\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default MessageListReducer;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCommentAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Alert.scss\";\r\n\r\nconst Alert = ({ messageAlert }) => {\r\n  return (\r\n    <div className=\"message-alert-popup\">\r\n      <div className=\"alert-header\">\r\n        <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\r\n        <h3>{messageAlert.payload.user}</h3>\r\n      </div>\r\n      <p className=\"alert-msg\">{messageAlert.payload.msg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCopy,\r\n  faTimes,\r\n  faUser,\r\n  faShieldAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./MeetingInfo.scss\";\r\n\r\nconst MeetingInfo = ({ setMeetInfoPopup, url }) => {\r\n  return (\r\n    <div className=\"meeting-info-block\">\r\n      <div className=\"meeting-header\">\r\n        <h3>Your meeting's ready</h3>\r\n        <FontAwesomeIcon\r\n          className=\"icon\"\r\n          icon={faTimes}\r\n          onClick={() => {\r\n            setMeetInfoPopup(false);\r\n          }}\r\n        />\r\n      </div>\r\n      <button className=\"add-people-btn\">\r\n        <FontAwesomeIcon className=\"icon\" icon={faUser} />\r\n        Add Others\r\n      </button>\r\n      <p className=\"info-text\">\r\n        Or share this meeting link with others you want in the meeting\r\n      </p>\r\n      <div className=\"meet-link\">\r\n        <span>{url}</span>\r\n        <FontAwesomeIcon\r\n          className=\"icon\"\r\n          icon={faCopy}\r\n          onClick={() => navigator.clipboard.writeText(url)}\r\n        />\r\n      </div>\r\n      <div className=\"permission-text\">\r\n        <FontAwesomeIcon className=\"icon red\" icon={faShieldAlt} />\r\n        <p className=\"small-text\">\r\n          People who use this meeting link must get your permission before they\r\n          can join.\r\n        </p>\r\n      </div>\r\n      <p className=\"small-text\">Joined as akshay@gmail.com</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeetingInfo;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faVideo,\r\n  faVideoSlash,\r\n  faMicrophone,\r\n  faPhone,\r\n  faAngleUp,\r\n  faClosedCaptioning,\r\n  faDesktop,\r\n  faMicrophoneSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CallPageFooter.scss\";\r\n\r\n\r\nconst CallPageFooter = ({\r\n  isPresenting,\r\n  stopScreenShare,\r\n  screenShare,\r\n  isAudio,\r\n  isVideo,\r\n  toggleAudio,\r\n  toggleVideo,\r\n  disconnectCall,\r\n  playStop,\r\n}) => {\r\n  return (\r\n    <div className=\"footer-item\">\r\n      <div className=\"left-item\">\r\n        <div className=\"icon-block\">\r\n          Meeting details\r\n          <FontAwesomeIcon className=\"icon\" icon={faAngleUp} />\r\n        </div>\r\n      </div>\r\n      <div className=\"center-item\">\r\n        <div\r\n          className={`icon-block ${!isAudio ? \"red-bg\" : null}`}\r\n          onClick={() => toggleAudio(!isAudio)}\r\n        >\r\n          <FontAwesomeIcon\r\n            className=\"icon\"\r\n            icon={isAudio ? faMicrophone : faMicrophoneSlash}\r\n          />\r\n        </div>\r\n        <div className=\"icon-block\" onClick={disconnectCall}>\r\n          <FontAwesomeIcon className=\"icon red\" icon={faPhone} />\r\n        </div>\r\n        <div className= {`icon-block ${!isVideo ? \"red-bg\" : null} video`} \r\n          onClick={() => toggleVideo(!isVideo)}>\r\n          <FontAwesomeIcon \r\n          className=\"icon\" \r\n          onclick={playStop}\r\n          icon={isVideo ? faVideo : faVideoSlash} />\r\n        </div>\r\n      </div>\r\n      <div className=\"right-item\">\r\n        <div className=\"icon-block\">\r\n          <FontAwesomeIcon className=\"icon red\" icon={faClosedCaptioning} />\r\n          <p className=\"title\">Turn on captions</p>\r\n        </div>\r\n\r\n        {isPresenting ? (\r\n          <div className=\"icon-block\" onClick={stopScreenShare}>\r\n            <FontAwesomeIcon className=\"icon red\" icon={faDesktop} />\r\n            <p className=\"title\">Stop presenting</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"icon-block\" onClick={screenShare}>\r\n            <FontAwesomeIcon className=\"icon red\" icon={faDesktop} />\r\n            <p className=\"title\">Present now</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallPageFooter;","import { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUserFriends,\r\n  faCommentAlt,\r\n  faUserCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./CallPageHeader.scss\";\r\nimport { formatDate } from \"./../../../utils/helpers\";\r\n\r\nconst CallPageHeader = ({\r\n  isMessenger,\r\n  setIsMessenger,\r\n  messageAlert,\r\n  setMessageAlert,\r\n}) => {\r\n  let interval = null;\r\n  const [currentTime, setCurrentTime] = useState(() => {\r\n    return formatDate();\r\n  });\r\n\r\n  useEffect(() => {\r\n    interval = setInterval(() => setCurrentTime(formatDate()), 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"frame-header\">\r\n      <div className=\"header-items icon-block\">\r\n        <FontAwesomeIcon className=\"icon\" icon={faUserFriends} />\r\n      </div>\r\n      <div\r\n        className=\"header-items icon-block\"\r\n        onClick={() => {\r\n          setIsMessenger(true);\r\n          setMessageAlert({});\r\n        }}\r\n      >\r\n        <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\r\n        {!isMessenger && messageAlert.alert && (\r\n          <span className=\"alert-circle-icon\"></span>\r\n        )}\r\n      </div>\r\n      <div className=\"header-items date-block\">{currentTime}</div>\r\n      <div className=\"header-items icon-block\">\r\n        <FontAwesomeIcon className=\"icon profile\" icon={faUserCircle} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallPageHeader;","import React, { Component } from \"react\";\r\n\r\nclass CallPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.localVideoref = React.createRef();\r\n    this.remoteVideoref = React.createRef();\r\n  };\r\n  componentDidMount =() =>{\r\n\r\n    const pc_config = null;\r\n\r\n    this.pc = new RTCPeerConnection(pc_config);\r\n\r\n    this.pc.onicecandidate = (e) => {\r\n      if(e.candidate){\r\n        console.log(JSON.stringify(e.candidate))\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    const constraints = {video: true}\r\n\r\n    const success = (stream) =>{\r\n      this.localVideoref.current.srcObject = stream\r\n    }\r\n    const failure = (e) => {\r\n      console.log('getUserMediaError: ', e)\r\n    }\r\n\r\n    navigator.mediaDevices.getUserMedia(constraints).then\r\n      ( success).catch(failure);\r\n\r\n    return (\r\n    <div>\r\n        <video\r\n          style={{\r\n            width: 240,\r\n            height: 240,\r\n            margin: 5,\r\n            \r\n          }}\r\n          ref={ this.localVideoref }\r\n          autoPlay>\r\n        </video>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CallPage;","import React from 'react';\r\nimport { useEffect, useReducer, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getRequest, postRequest } from \"./../../utils/apiRequests\";\r\nimport {\r\n  BASE_URL,\r\n  GET_CALL_ID,\r\n  SAVE_CALL_ID,\r\n} from \"./../../utils/apiEndpoints\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./CallPage.scss\";\r\nimport Messenger from \"./../UI/Messenger/Messenger\";\r\nimport MessageListReducer from \"../../reducers/MessageListReducer\";\r\nimport Alert from \"../UI/Alert/Alert\";\r\nimport MeetingInfo from \"../UI/MeetingInfo/MeetingInfo\";\r\nimport CallPageFooter from \"../UI/CallPageFooter/CallPageFooter\";\r\nimport CallPageHeader from \"../UI/CallPageHeader/CallPageHeader\";\r\nimport \"./CallPage.css\";\r\nimport Video from \"./Video\";\r\n\r\nlet peer = null;\r\nconst socket = io.connect(\"http://localhost:4000\");\r\nconst initialState = [];\r\n\r\nconst CallPage = (props) => {\r\n  const localVideoref = React.createRef();\r\n  const history = useHistory();\r\n  let { id } = useParams();\r\n  const isAdmin = window.location.hash == \"#init\" ? true : false;\r\n  const url = `${window.location.origin}${window.location.pathname}`;\r\n  let alertTimeout = null;\r\n\r\n  const [messageList, messageListReducer] = useReducer(\r\n    MessageListReducer,\r\n    initialState\r\n  );\r\n\r\n  const [streamObj, setStreamObj] = useState();\r\n  const [screenCastStream, setScreenCastStream] = useState();\r\n  const [meetInfoPopup, setMeetInfoPopup] = useState(false);\r\n  const [isPresenting, setIsPresenting] = useState(false);\r\n  const [isMessenger, setIsMessenger] = useState(false);\r\n  const [messageAlert, setMessageAlert] = useState({});\r\n  const [isAudio, setIsAudio] = useState(true);\r\n  const [isVideo, setIsVideo] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (isAdmin) {\r\n      setMeetInfoPopup(true);\r\n    }\r\n    initWebRTC();\r\n    socket.on(\"code\", (data) => {\r\n      peer.signal(data);\r\n    });\r\n  }, []);\r\n\r\n  const getRecieverCode = async () => {\r\n    const response = await getRequest(`${BASE_URL}${GET_CALL_ID}/${id}`);\r\n    if (response.code) {\r\n      peer.signal(response.code);\r\n    }\r\n  };\r\n\r\n  const initWebRTC = () => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        setStreamObj(stream);\r\n\r\n        peer = new Peer({\r\n          initiator: isAdmin,\r\n          trickle: false,\r\n          stream: stream,\r\n        });\r\n\r\n        if (!isAdmin) {\r\n          getRecieverCode();\r\n        }\r\n\r\n        peer.on(\"signal\", async (data) => {\r\n          if (isAdmin) {\r\n            let payload = {\r\n              id,\r\n              signalData: data,\r\n            };\r\n            await postRequest(`${BASE_URL}${SAVE_CALL_ID}`, payload);\r\n          } else {\r\n            socket.emit(\"code\", data, (cbData) => {\r\n              console.log(\"code sent\");\r\n            });\r\n          }\r\n        });\r\n\r\n        peer.on(\"connect\", () => {\r\n          // wait for 'connect' event before using the data channel\r\n        });\r\n\r\n        peer.on(\"data\", (data) => {\r\n          clearTimeout(alertTimeout);\r\n          messageListReducer({\r\n            type: \"addMessage\",\r\n            payload: {\r\n              user: \"other\",\r\n              msg: data.toString(),\r\n              time: Date.now(),\r\n            },\r\n          });\r\n\r\n          setMessageAlert({\r\n            alert: true,\r\n            isPopup: true,\r\n            payload: {\r\n              user: \"other\",\r\n              msg: data.toString(),\r\n            },\r\n          });\r\n\r\n          alertTimeout = setTimeout(() => {\r\n            setMessageAlert({\r\n              ...messageAlert,\r\n              isPopup: false,\r\n              payload: {},\r\n            });\r\n          }, 10000);\r\n        });\r\n\r\n        peer.on(\"stream\", (stream) => {\r\n          // got remote video stream, now let's show it in a video tag\r\n          let video = document.querySelector(\"video\");\r\n\r\n          if (\"srcObject\" in video) {\r\n            video.srcObject = stream;\r\n          } else {\r\n            video.src = window.URL.createObjectURL(stream); // for older browsers\r\n          }\r\n\r\n          video.play();\r\n        });\r\n        \r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  const sendMsg = (msg) => {\r\n    peer.send(msg);\r\n    messageListReducer({\r\n      type: \"addMessage\",\r\n      payload: {\r\n        user: \"you\",\r\n        msg: msg,\r\n        time: Date.now(),\r\n      },\r\n    });\r\n  };\r\n\r\n  const screenShare = () => {\r\n    navigator.mediaDevices\r\n      .getDisplayMedia({ cursor: true })\r\n      .then((screenStream) => {\r\n        peer.replaceTrack(\r\n          streamObj.getVideoTracks()[0],\r\n          screenStream.getVideoTracks()[0],\r\n          streamObj\r\n        );\r\n        setScreenCastStream(screenStream);\r\n        screenStream.getTracks()[0].onended = () => {\r\n          peer.replaceTrack(\r\n            screenStream.getVideoTracks()[0],\r\n            streamObj.getVideoTracks()[0],\r\n            streamObj\r\n          );\r\n        };\r\n        setIsPresenting(true);\r\n      });\r\n  };\r\n\r\n  const stopScreenShare = () => {\r\n    screenCastStream.getVideoTracks().forEach(function (track) {\r\n      track.stop();\r\n    });\r\n    peer.replaceTrack(\r\n      screenCastStream.getVideoTracks()[0],\r\n      streamObj.getVideoTracks()[0],\r\n      streamObj\r\n    );\r\n    setIsPresenting(false);\r\n  };\r\n\r\n  const toggleAudio = (value) => {\r\n    streamObj.getAudioTracks()[0].enabled = value;\r\n    setIsAudio(value);\r\n  };\r\n  const toggleVideo = (value) => {\r\n    streamObj.getVideoTracks()[0].enabled = value;\r\n    setIsVideo(value);\r\n  };\r\n\r\n  const disconnectCall = () => {\r\n    peer.destroy();\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n  const playStop = () => {\r\n    console.log('object')\r\n    let enabled = peer.getVideoTracks()[0].enabled;\r\n    if (enabled) {\r\n      peer.getVideoTracks()[0].enabled = false;\r\n      //setPlayVideo()\r\n    } else {\r\n      //setStopVideo()\r\n      peer.getVideoTracks()[0].enabled = true;\r\n    }\r\n  }\r\n   const componentDidMount =() =>{\r\n\r\n    const pc_config = null;\r\n\r\n    this.pc = new RTCPeerConnection(pc_config);\r\n\r\n    this.pc.onicecandidate = (e) => {\r\n      if(e.candidate){\r\n        console.log(JSON.stringify(e.candidate))\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  const constraints = {video: true}\r\n\r\n  const success = (stream) =>{\r\n    this.localVideoref.current.srcObject = stream\r\n  }\r\n  const failure = (e) => {\r\n    console.log('getUserMediaError: ', e)\r\n  }\r\n\r\n  navigator.mediaDevices.getUserMedia(constraints).then\r\n    ( success).catch(failure);\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <>\r\n    \r\n      <div className=\"callpage-container\">\r\n      <div id=\"video-grid\" src=\"\" controls>\r\n        <Video />\r\n      </div>\r\n\r\n      <CallPageHeader\r\n        isMessenger={isMessenger}\r\n        setIsMessenger={setIsMessenger}\r\n        messageAlert={messageAlert}\r\n        setMessageAlert={setMessageAlert}\r\n      />\r\n      <CallPageFooter\r\n        isPresenting={isPresenting}\r\n        stopScreenShare={stopScreenShare}\r\n        screenShare={screenShare}\r\n        isAudio={isAudio}\r\n        isVideo={isVideo}\r\n        playStop={playStop}\r\n        toggleAudio={toggleAudio}\r\n        toggleVideo={toggleVideo}\r\n        disconnectCall={disconnectCall}\r\n      />\r\n\r\n      {isAdmin && meetInfoPopup && (\r\n        <MeetingInfo setMeetInfoPopup={setMeetInfoPopup} url={url} />\r\n      )}\r\n      {isMessenger ? (\r\n        <Messenger\r\n          setIsMessenger={setIsMessenger}\r\n          sendMsg={sendMsg}\r\n          messageList={messageList}\r\n        />\r\n      ) : (\r\n        messageAlert.isPopup && <Alert messageAlert={messageAlert} />\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CallPage;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./NoMatch.scss\";\r\nimport Header from \"../UI/Header/Header\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div className=\"no-match\">\r\n      <Header />\r\n      <div className=\"no-match__content\">\r\n        <h2>Invalid video call name.</h2>\r\n        <div className=\"action-btn\">\r\n          <Link className=\"btn green\" to=\"/\">\r\n            Return to home screen\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NoMatch;","import React from 'react';\nimport './css/App.scss';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport CallPage from \"./components/CallPage/CallPage\";\nimport NoMatch from \"./components/NoMatch/NoMatch\";\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n            <Route exact path=\"/:id\">\n                <CallPage />\n            </Route>\n            <Route exact path=\"/\">\n                <HomePage />\n            </Route>\n            <Route path=\"*\">\n                <NoMatch />\n            </Route>\n        </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}